<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.tgr.springbootmybatis.mapper.UserMapper" >
 
  <resultMap id="BaseResultMap" type="com.tgr.springbootmybatis.entity.User" >
    <id column="userId" property="userid" jdbcType="INTEGER" />
    <result column="name" property="name" jdbcType="VARCHAR" />
    <result column="mobile" property="mobile" jdbcType="CHAR" />
    <result column="sex" property="sex" jdbcType="CHAR" />
    <result column="age" property="age" jdbcType="INTEGER" />
    <result column="address" property="address" jdbcType="VARCHAR" />
    <result column="password" property="password" jdbcType="VARCHAR" />
  </resultMap>
  
  <sql id="Base_Column_List" >
    userId, name, mobile, sex, age, address, password
  </sql>
  
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from user
    where userId = #{userid,jdbcType=INTEGER}
  </select>
  
  <select id="findByName" parameterType="string" resultMap="BaseResultMap">
  	select
  	<include refid="Base_Column_List"></include>
  	from user
  	where name = #{value}
  </select>
  
  <select id="findPermissionByUserId" parameterType="Integer" resultType="string">
  	select p.permission from `user` u 
										join user_role ur on u.userId=ur.user_id
										join role r on ur.role_id=r.id
										join role_permission rp on r.id=rp.role_id
										join permission p on rp.permission_id=p.id
	where u.userId=#{value}
  </select>
  
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from user
    where userId = #{userid,jdbcType=INTEGER}
  </delete>
  
  <insert id="insert" parameterType="com.tgr.springbootmybatis.entity.User" >
    insert into user (userId, name, mobile, 
      sex, age, address, password
      )
    values (#{userid,jdbcType=INTEGER}, #{name,jdbcType=VARCHAR}, #{mobile,jdbcType=CHAR}, 
      #{sex,jdbcType=CHAR}, #{age,jdbcType=INTEGER}, #{address,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR}
      )
  </insert>
  
  <insert id="insertSelective" parameterType="com.tgr.springbootmybatis.entity.User" >
    insert into user
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="userid != null" >
        userId,
      </if>
      <if test="name != null" >
        name,
      </if>
      <if test="mobile != null" >
        mobile,
      </if>
      <if test="sex != null" >
        sex,
      </if>
      <if test="age != null" >
        age,
      </if>
      <if test="address != null" >
        address,
      </if>
      <if test="password != null" >
        password,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="userid != null" >
        #{userid,jdbcType=INTEGER},
      </if>
      <if test="name != null" >
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="mobile != null" >
        #{mobile,jdbcType=CHAR},
      </if>
      <if test="sex != null" >
        #{sex,jdbcType=CHAR},
      </if>
      <if test="age != null" >
        #{age,jdbcType=INTEGER},
      </if>
      <if test="address != null" >
        #{address,jdbcType=VARCHAR},
      </if>
      <if test="password != null" >
        #{password,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.tgr.springbootmybatis.entity.User" >
    update user
    <set >
      <if test="name != null" >
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="mobile != null" >
        mobile = #{mobile,jdbcType=CHAR},
      </if>
      <if test="sex != null" >
        sex = #{sex,jdbcType=CHAR},
      </if>
      <if test="age != null" >
        age = #{age,jdbcType=INTEGER},
      </if>
      <if test="address != null" >
        address = #{address,jdbcType=VARCHAR},
      </if>
      <if test="password != null" >
        password = #{password,jdbcType=VARCHAR},
      </if>
    </set>
    where userId = #{userid,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.tgr.springbootmybatis.entity.User" >
    update user
    set name = #{name,jdbcType=VARCHAR},
      mobile = #{mobile,jdbcType=CHAR},
      sex = #{sex,jdbcType=CHAR}, 
      age = #{age,jdbcType=INTEGER},
      address = #{address,jdbcType=VARCHAR},
      password = #{password,jdbcType=VARCHAR}
    where userId = #{userid,jdbcType=INTEGER}
  </update>
</mapper>